services:
  auth-service-db:
    container_name: auth-db
    image: postgres:latest
    environment:
      - POSTGRES_USER=vatsal
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=auth
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - system
#  auth-service:
#    build:
#      context: auth-service
#      dockerfile: Dockerfile
#    container_name: auth-service
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-service-db:5432/auth
#      - JWT_SECRET=${JWT_SECRET}
#    ports:
#      - "8081:8081"
#    depends_on:
#      auth-service-db:
#        condition: service_healthy
#    networks:
#      - system

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - system

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_DATABASE: videodb
    restart: unless-stopped
    networks:
      - system

volumes:
  pgdata:
  rabbitmq-data:
  mongo-data:
networks:
  system:
    driver: bridge